How to accept unhosted accounts in your web app:

We provide a client-side library called remoteStorage.js, which you can use to easily make your web app compatible with unhosted accounts. The first thing you do is include it. We use require.js, so the script tag you need to include in your page's <head> looks as follows (assuming version number 0.4.1):

    <script src="http://unhosted.org/require.js" data-main="http://unhosted.org/0.4.1/remoteStorage.js"></script>
    <script>
      var remoteStorage = require('remoteStorage');
    
      //do stuff with remoteStorage...
    
    </script>

you can also host require.js yourself, and you can host the library yourself [links].

The next step is you look up whether a user has remote storage linked to their user address. This is done with the getStorageInfo function. It takes a user address ('user@host') and a callback as its arguments. The callback will get an error code, and a storageInfo object. If the error code is falsy, then the storageInfo object will have some data fields in it that we will need later. It looks as follows:

      function connect() {
        var userAddress=document.getElementById('userAddress').value;
        remoteStorage.getStorageInfo(userAddress, function(err, storageInfo) {
          if(err) {
            alert('no, sorry!');
          } else {
            alert('yes! look: '+JSON.stringify(storageInfo));
            localStorage.currUserStorageInfo = JSON.stringify(storageInfo);
          }
        });
      }

The next step is to get some public information from someone's remote storage. We use the createClient method to create a client, and on there call the get method to retrieve the information we want:

    function getPublicFoo(userAddress, cb) {
      remoteStorage.getStorageInfo(userAddress, function(err, storageInfo) {
        if(err) {
          alert('could not find the remote storage of '+userAddress);
        } else {
          var client = remoteStorage.createClient(storageInfo, 'public');
          client.get('foo', function(err, data) {
            if(err) {
              alert('could not find foo on the remote storage of '+userAddress);
            } else {
              cb(data);    
            }
          });
        }
      });
    }

Getting public data is easy because it requires no credentials. If we want to write to a user's public data, or read or write from one of the other categories, we need to do an OAuth dialog first, and obtain a token. Our library provides two functions to make this easier. On our main page, we add the following code to open the popup window. Say we want to connect to the user's "contacts" and "pictures" categories, and have set up a token receiver (see below) on https://myfavouritesandwich.org/rcvToken.html:

    function doOAuth() {
      var receiverPage = 'https://myfavouritesandwich.org/rcvToken.html';
      var oauthPage = remoteStorage.makeOAuthAddress(localStorage.currUserStorageInfo, ['public', 'pictures'], receiverPage);
      var popup = window.open(oauthPage);
      popup.onclose = function() {
        alert(localStorage.bearerToken);
      };
    }

With the bearerToken, you can create clients with credentials, and use the get, put and delete methods on there, for instance:

    function publishAvatar() {
      var publicClient = remoteStorage.createClient(storageInfo, 'public', localStorage.bearerToken);
      var picturesClient = remoteStorage.createClient(storageInfo, 'pictures', localStorage.bearerToken);
      picturesClient.get('foto01', function(err, data) {
        publicClient.put('avatar', data, function(err, data) {
          alert('copied //user@host/pictures#foto01 to //user@host/public#avatar');
        });
      });
    }

And then on /rcvToken.html we would need the following:

    localStorage.bearerToken = remoteStorage.receiveToken();
    window.close();

Putting this all together, the resulting page on https://myfavouritesandwich.org/tutorial.html could be something like this:

    <!DOCTYPE html>
      <head>
        <title>remoteStorage.js tutorial</title>
        <meta charset="utf-8">
        <script src="http://unhosted.org/require.js" data-main="http://unhosted.org/0.4.1/remoteStorage"></script>
        <script>
          require(['remoteStorage'], function(remoteStorage) {

            document.getElementById('connectButton').onclick = function() {
              var userAddress=document.getElementById('userAddress').value;
              remoteStorage.getStorageInfo(userAddress, function(err, storageInfo) {
                if(err) {
                  alert('no, sorry!');
                } else {
                  alert('yes! look: '+JSON.stringify(storageInfo));
                  localStorage.currUserStorageInfo = JSON.stringify(storageInfo);
                }
              });
            }

            document.getElementById('getPublicFooButton').onclick = function() {
              var userAddress=document.getElementById('userAddress').value;
              remoteStorage.getStorageInfo(userAddress, function(err, storageInfo) {
                if(err) {
                  alert('could not find the remote storage of '+userAddress);
                } else {
                  var client = remoteStorage.createClient(storageInfo, 'public');
                  client.get('foo', function(err, data) {
                    if(err) {
                      alert('could not find foo on the remote storage of '+userAddress);
                    } else {
                      alert(data);
                    }
                  });
                }
              });
            }
            document.getElementById('doOAuthButton').onclick =  function() {
              var popup = window.open(
                remoteStorage.createOAuthAddress(
                  JSON.parse(localStorage.currUserStorageInfo),
                  ['public', 'pictures'],
                  'https://myfavouritesandwich.org/rcvToken.html'
                )
              );
              popup.onclose = function() {
                alert(localStorage.bearerToken);
              };
            }
            document.getElementById('setPhotoAsAvatarButton').onclick = function() {
              var storageInfo = JSON.parse(localStorage.currUserStorageInfo);
              var publicClient = remoteStorage.createClient(storageInfo, 'public', localStorage.bearerToken);
              var picturesClient = remoteStorage.createClient(storageInfo, 'pictures', localStorage.bearerToken);
              picturesClient.get('foto01', function(err, data) {
                publicClient.put('avatar', data, function(err, data) {
                  alert('copied //user@host/pictures#foto01 to //user@host/public#avatar');
                });
              });
            }
          });
        </script>
      </head>
      <body>
        <input id="userAddress" type="text">
        <input type="submit" value="Connect" id="connectButton">
        <input type="submit" value="Get public foo" id="getPublicFooButton">
        <input type="submit" value="Do OAuth" id="doOAuthButton">
        <input type="submit" value="Set Photo as Avatar" id="setPhotoAsAvatarButton">
      </body>
    </html>

and the helper page on https://myfavouritesandwich.org/rcvToken.html:

    <!DOCTYPE html>
      <head>
        <title>Closing dialog...</title>
        <meta charset="utf-8">
        <script src="http://unhosted.org/require.js" data-main="http://unhosted.org/0.4.1/remoteStorage.js"></script>
        <script>
          localStorage.bearerToken = remoteStorage.receiveToken();
          window.close();
        </script>
      </head>
      <body>
        Closing dialog...
      </body>
    </html>

